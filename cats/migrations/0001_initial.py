# Generated by Django 2.1.2 on 2018-10-03 21:43

import cats.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('sex', models.CharField(choices=[('F', 'F'), ('M', 'M'), ('X', 'X')], default='F', max_length=1)),
                ('breed', models.CharField(choices=[('Abyssinian', 'Abyssinian'), ('Aegean', 'Aegean'), ('American Curl', 'American Curl'), ('American Bobtail', 'American Bobtail'), ('American Shorthair', 'American Shorthair'), ('American Wirehair', 'American Wirehair'), ('Arabian Mau', 'Arabian Mau'), ('Australian Mist', 'Australian Mist'), ('Asian', 'Asian'), ('Asian Semi-longhair', 'Asian Semi-longhair'), ('Balinese', 'Balinese'), ('Bambino', 'Bambino'), ('Bengal', 'Bengal'), ('Birman', 'Birman'), ('Bombay', 'Bombay'), ('Brazilian Shorthair', 'Brazilian Shorthair'), ('British Longhair', 'British Longhair'), ('British Shorthair', 'British Shorthair'), ('British Longhair', 'British Longhair'), ('Burmese', 'Burmese'), ('Burmilla', 'Burmilla'), ('California Spangled', 'California Spangled'), ('Chantilly-Tiffany', 'Chantilly-Tiffany'), ('Chartreux', 'Chartreux'), ('Chausie', 'Chausie'), ('Cheetoh', 'Cheetoh'), ('Colorpoint Shorthair', 'Colorpoint Shorthair'), ('Cornish Rex', 'Cornish Rex'), ('Cymric', 'Cymric'), ('Cyprus', 'Cyprus'), ('Devon Rex', 'Devon Rex'), ('Donskoy', 'Donskoy'), ('Dragon Li', 'Dragon Li'), ('Dwarf', 'Dwarf'), ('Egyptian Mau', 'Egyptian Mau'), ('European Shorthair', 'European Shorthair'), ('Exotic Shorthair', 'Exotic Shorthair'), ('Foldex', 'Foldex'), ('German Rex', 'German Rex'), ('Havana Brown', 'Havana Brown'), ('Highlander', 'Highlander'), ('Himalayan', 'Himalayan'), ('Japanese Bobtail', 'Japanese Bobtail'), ('Javanese', 'Javanese'), ('Karelian Bobtail', 'Karelian Bobtail'), ('Khao Manee', 'Khao Manee'), ('Korat', 'Korat'), ('Korean Bobtail', 'Korean Bobtail'), ('Korn Ja', 'Korn Ja'), ('Kurilian Bobtail', 'Kurilian Bobtail'), ('LaPerm', 'LaPerm'), ('Lykoi', 'Lykoi'), ('Maine Coon', 'Maine Coon'), ('Manx', 'Manx'), ('Mekong Bobtail', 'Mekong Bobtail'), ('Minskin', 'Minskin'), ('Munchkin', 'Munchkin'), ('Nebelung', 'Nebelung'), ('Napoleon', 'Napoleon'), ('Norwegian Forest', 'Norwegian Forest'), ('Ocicat', 'Ocicat'), ('Ojos Azules', 'Ojos Azules'), ('Oregon Rex', 'Oregon Rex'), ('Oriental Bicolor', 'Oriental Bicolor'), ('Oriental Shorthair', 'Oriental Shorthair'), ('Oriental Longhair', 'Oriental Longhair'), ('PerFold', 'PerFold'), ('Persian', 'Persian'), ('Peterbald', 'Peterbald'), ('Pixie-bob', 'Pixie-bob'), ('Raas', 'Raas'), ('Ragamuffin', 'Ragamuffin'), ('Ragdoll', 'Ragdoll'), ('Russian Blue', 'Russian Blue'), ('Russian Black', 'Russian Black'), ('Russian Tabby', 'Russian Tabby'), ('Russian White', 'Russian White'), ('Sam Sawet', 'Sam Sawet'), ('Savannah', 'Savannah'), ('Scottish Fold', 'Scottish Fold'), ('Selkirk Rex', 'Selkirk Rex'), ('Serengeti', 'Serengeti'), ('Serrade petit', 'Serrade petit'), ('Siamese', 'Siamese'), ('Siberian', 'Siberian'), ('Singapura', 'Singapura'), ('Snowshoe', 'Snowshoe'), ('Sokoke', 'Sokoke'), ('Somali', 'Somali'), ('Sphynx', 'Sphynx'), ('Suphalak', 'Suphalak'), ('Thai', 'Thai'), ('Thai Lilac', 'Thai Lilac'), ('Tonkinese', 'Tonkinese'), ('Toyger', 'Toyger'), ('Turkish Angora', 'Turkish Angora'), ('Turkish Van', 'Turkish Van'), ('Ukrainian Levkoy', 'Ukrainian Levkoy'), ('Other', 'Other')], default='American Shorthair', max_length=30)),
                ('profilepic', models.ImageField(blank=True, help_text='Optional. This will be clipped to a 1:1 aspect ratio.', null=True, upload_to=cats.models.cat_picture_path, verbose_name='profile picture')),
                ('pic1', models.ImageField(help_text='Picture 1 is required', upload_to=cats.models.cat_picture_path, verbose_name='picture 1')),
                ('pic2', models.ImageField(blank=True, null=True, upload_to=cats.models.cat_picture_path, verbose_name='picture 2')),
                ('pic3', models.ImageField(blank=True, null=True, upload_to=cats.models.cat_picture_path, verbose_name='picture 3')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('seen', models.BooleanField(default=False)),
                ('matchedcat', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='matchedcat', to='cats.Cat', verbose_name='matched cat')),
                ('matchingcat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matchingcat', to='cats.Cat', verbose_name="owner's cat")),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[['AF', 'Afghanistan'], ['AX', 'Åland Islands'], ['AL', 'Albania'], ['DZ', 'Algeria'], ['AS', 'American Samoa'], ['AD', 'Andorra'], ['AO', 'Angola'], ['AI', 'Anguilla'], ['AQ', 'Antarctica'], ['AG', 'Antigua & Barbuda'], ['AR', 'Argentina'], ['AM', 'Armenia'], ['AW', 'Aruba'], ['AC', 'Ascension Island'], ['AU', 'Australia'], ['AT', 'Austria'], ['AZ', 'Azerbaijan'], ['BS', 'Bahamas'], ['BH', 'Bahrain'], ['BD', 'Bangladesh'], ['BB', 'Barbados'], ['BY', 'Belarus'], ['BE', 'Belgium'], ['BZ', 'Belize'], ['BJ', 'Benin'], ['BM', 'Bermuda'], ['BT', 'Bhutan'], ['BO', 'Bolivia'], ['BA', 'Bosnia & Herzegovina'], ['BW', 'Botswana'], ['BR', 'Brazil'], ['IO', 'British Indian Ocean Territory'], ['VG', 'British Virgin Islands'], ['BN', 'Brunei'], ['BG', 'Bulgaria'], ['BF', 'Burkina Faso'], ['BI', 'Burundi'], ['KH', 'Cambodia'], ['CM', 'Cameroon'], ['CA', 'Canada'], ['IC', 'Canary Islands'], ['CV', 'Cape Verde'], ['BQ', 'Caribbean Netherlands'], ['KY', 'Cayman Islands'], ['CF', 'Central African Republic'], ['EA', 'Ceuta & Melilla'], ['TD', 'Chad'], ['CL', 'Chile'], ['CN', 'China'], ['CX', 'Christmas Island'], ['CC', 'Cocos (Keeling) Islands'], ['CO', 'Colombia'], ['KM', 'Comoros'], ['CG', 'Congo - Brazzaville'], ['CD', 'Congo - Kinshasa'], ['CK', 'Cook Islands'], ['CR', 'Costa Rica'], ['CI', 'Côte d’Ivoire'], ['HR', 'Croatia'], ['CU', 'Cuba'], ['CW', 'Curaçao'], ['CY', 'Cyprus'], ['CZ', 'Czechia'], ['DK', 'Denmark'], ['DG', 'Diego Garcia'], ['DJ', 'Djibouti'], ['DM', 'Dominica'], ['DO', 'Dominican Republic'], ['EC', 'Ecuador'], ['EG', 'Egypt'], ['SV', 'El Salvador'], ['GQ', 'Equatorial Guinea'], ['ER', 'Eritrea'], ['EE', 'Estonia'], ['ET', 'Ethiopia'], ['EZ', 'Eurozone'], ['FK', 'Falkland Islands'], ['FO', 'Faroe Islands'], ['FJ', 'Fiji'], ['FI', 'Finland'], ['FR', 'France'], ['GF', 'French Guiana'], ['PF', 'French Polynesia'], ['TF', 'French Southern Territories'], ['GA', 'Gabon'], ['GM', 'Gambia'], ['GE', 'Georgia'], ['DE', 'Germany'], ['GH', 'Ghana'], ['GI', 'Gibraltar'], ['GR', 'Greece'], ['GL', 'Greenland'], ['GD', 'Grenada'], ['GP', 'Guadeloupe'], ['GU', 'Guam'], ['GT', 'Guatemala'], ['GG', 'Guernsey'], ['GN', 'Guinea'], ['GW', 'Guinea-Bissau'], ['GY', 'Guyana'], ['HT', 'Haiti'], ['HN', 'Honduras'], ['HK', 'Hong Kong SAR China'], ['HU', 'Hungary'], ['IS', 'Iceland'], ['IN', 'India'], ['ID', 'Indonesia'], ['IR', 'Iran'], ['IQ', 'Iraq'], ['IE', 'Ireland'], ['IM', 'Isle of Man'], ['IL', 'Israel'], ['IT', 'Italy'], ['JM', 'Jamaica'], ['JP', 'Japan'], ['JE', 'Jersey'], ['JO', 'Jordan'], ['KZ', 'Kazakhstan'], ['KE', 'Kenya'], ['KI', 'Kiribati'], ['XK', 'Kosovo'], ['KW', 'Kuwait'], ['KG', 'Kyrgyzstan'], ['LA', 'Laos'], ['LV', 'Latvia'], ['LB', 'Lebanon'], ['LS', 'Lesotho'], ['LR', 'Liberia'], ['LY', 'Libya'], ['LI', 'Liechtenstein'], ['LT', 'Lithuania'], ['LU', 'Luxembourg'], ['MO', 'Macau SAR China'], ['MK', 'Macedonia'], ['MG', 'Madagascar'], ['MW', 'Malawi'], ['MY', 'Malaysia'], ['MV', 'Maldives'], ['ML', 'Mali'], ['MT', 'Malta'], ['MH', 'Marshall Islands'], ['MQ', 'Martinique'], ['MR', 'Mauritania'], ['MU', 'Mauritius'], ['YT', 'Mayotte'], ['MX', 'Mexico'], ['FM', 'Micronesia'], ['MD', 'Moldova'], ['MC', 'Monaco'], ['MN', 'Mongolia'], ['ME', 'Montenegro'], ['MS', 'Montserrat'], ['MA', 'Morocco'], ['MZ', 'Mozambique'], ['MM', 'Myanmar (Burma)'], ['NA', 'Namibia'], ['NR', 'Nauru'], ['NP', 'Nepal'], ['NL', 'Netherlands'], ['NC', 'New Caledonia'], ['NZ', 'New Zealand'], ['NI', 'Nicaragua'], ['NE', 'Niger'], ['NG', 'Nigeria'], ['NU', 'Niue'], ['NF', 'Norfolk Island'], ['KP', 'North Korea'], ['MP', 'Northern Mariana Islands'], ['NO', 'Norway'], ['OM', 'Oman'], ['PK', 'Pakistan'], ['PW', 'Palau'], ['PS', 'Palestinian Territories'], ['PA', 'Panama'], ['PG', 'Papua New Guinea'], ['PY', 'Paraguay'], ['PE', 'Peru'], ['PH', 'Philippines'], ['PN', 'Pitcairn Islands'], ['PL', 'Poland'], ['PT', 'Portugal'], ['PR', 'Puerto Rico'], ['QA', 'Qatar'], ['RE', 'Réunion'], ['RO', 'Romania'], ['RU', 'Russia'], ['RW', 'Rwanda'], ['WS', 'Samoa'], ['SM', 'San Marino'], ['ST', 'São Tomé & Príncipe'], ['SA', 'Saudi Arabia'], ['SN', 'Senegal'], ['RS', 'Serbia'], ['SC', 'Seychelles'], ['SL', 'Sierra Leone'], ['SG', 'Singapore'], ['SX', 'Sint Maarten'], ['SK', 'Slovakia'], ['SI', 'Slovenia'], ['SB', 'Solomon Islands'], ['SO', 'Somalia'], ['ZA', 'South Africa'], ['GS', 'South Georgia & South Sandwich Islands'], ['KR', 'South Korea'], ['SS', 'South Sudan'], ['ES', 'Spain'], ['LK', 'Sri Lanka'], ['BL', 'St. Barthélemy'], ['SH', 'St. Helena'], ['KN', 'St. Kitts & Nevis'], ['LC', 'St. Lucia'], ['MF', 'St. Martin'], ['PM', 'St. Pierre & Miquelon'], ['VC', 'St. Vincent & Grenadines'], ['SD', 'Sudan'], ['SR', 'Suriname'], ['SJ', 'Svalbard & Jan Mayen'], ['SZ', 'Swaziland'], ['SE', 'Sweden'], ['CH', 'Switzerland'], ['SY', 'Syria'], ['TW', 'Taiwan'], ['TJ', 'Tajikistan'], ['TZ', 'Tanzania'], ['TH', 'Thailand'], ['TL', 'Timor-Leste'], ['TG', 'Togo'], ['TK', 'Tokelau'], ['TO', 'Tonga'], ['TT', 'Trinidad & Tobago'], ['TA', 'Tristan da Cunha'], ['TN', 'Tunisia'], ['TR', 'Turkey'], ['TM', 'Turkmenistan'], ['TC', 'Turks & Caicos Islands'], ['TV', 'Tuvalu'], ['UM', 'U.S. Outlying Islands'], ['VI', 'U.S. Virgin Islands'], ['UG', 'Uganda'], ['UA', 'Ukraine'], ['AE', 'United Arab Emirates'], ['GB', 'United Kingdom'], ['UN', 'United Nations'], ['US', 'United States'], ['UY', 'Uruguay'], ['UZ', 'Uzbekistan'], ['VU', 'Vanuatu'], ['VA', 'Vatican City'], ['VE', 'Venezuela'], ['VN', 'Vietnam'], ['WF', 'Wallis & Futuna'], ['EH', 'Western Sahara'], ['YE', 'Yemen'], ['ZM', 'Zambia'], ['ZW', 'Zimbabwe']], default='CA', max_length=50)),
                ('timezone', timezone_field.fields.TimeZoneField(default='Canada/Pacific')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(choices=[(1, 1), (-1, -1)], default=1)),
                ('votee', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='votee', to='cats.Cat')),
                ('voter', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='voter', to='cats.Cat')),
            ],
        ),
        migrations.AddField(
            model_name='cat',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cats.Profile'),
        ),
        migrations.AddField(
            model_name='cat',
            name='votes',
            field=models.ManyToManyField(through='cats.Vote', to='cats.Cat'),
        ),
    ]
